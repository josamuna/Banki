<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAAK/INwWK6QAAAyhJREFUOE99
        lMkrvHEcx8ceSWQ5uIyDJW7EjKnJchgXE1ESxnKwNYMTY4SQA2U7GFKWUiRKSdTY96TEBY2yRMmZf+Ct
        9yfzm3mYn8O36Xnm+7w/r/dnU6lUKngef39/ZGVlYWxsDPPz8xgaGkJaWhp8fX3lXkBAAFJSUlBdXQ2r
        1YqNjQ3U1NSgr68PZrOZd9yCQUFB6O7uxsTEhIgmJiYiOzsbs7OzaGpq+ieanJyM3t5ejI6OoqqqCvX1
        9cjPz0dDQ4NSsKysDD09PQgMDFRQh4aGYmRkBFqtVt5rNBr5mJSFhYWoqKhAUVERkpKS3IJ+fn6YmpoS
        Oz/TwOfMzEx0dXUJZU5ODiwWi5Dl5eWhpaVFjk6ncwsyN9PT01Cr1V4FU1NTMTAwAKaFNltbW0UwNzcX
        g4ODsNlsEkiRQ74kflRUFAwGA0pLS1FcXIy5uTmsra2ho6NDgvEOC1JbWyuEzDuJ6+rqlIJxcXGw2+1Y
        WlrC09MTbm5u8PDwgNvbW5ydneHt7U1EmLvKykoRKCgoAHPPZxIrCCMiIrC8vIydnR2srq5icXERMzMz
        eH5+hsPhkMNA7e3tYpmVLy8vF2L+mkwmpWBGRoZQfX5+isjp6amQHR4e4v7+Hpubm3h5eZHidHZ2Cmlj
        YyPa2tqEkrlVELKBr6+v8fHxIfacTicuLy9xcnIi1vf29iQQRZgejUYr/RceHg4OREhIiFIwLCxMbL6/
        vwsJaS8uLvD6+iqkfD44OEB8fDx8fHzkeLZYcHCwUpB/cgpIQqLHx0cRpmWSX11dCW1JSYnX1voWV85y
        ZGQktra2hOzo6EhGj83OvN3d3WF7e1sCJCQk/E9UKZieno7j42OxxiK4xpCB2E4kZEBW/9viT2GlYExM
        DBYWFrC7uysN7doytMP/hoeHJZ+k57h5GVO3IIvS398vl/f398Wm5wcsAtfZ+vq62Oa92NjYvwmbm5vl
        MnvQaDT+IqBNjuj5+blY5yb6Qekm1Ov1WFlZETF+8L2OflFyxMbHx2UpeKbkV5Wjo6MxOTkpBeEkcKV5
        W2Wud2zmP3Po2nvc1l4i/ynuEv4CyILiXHr73ewAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="bindingNavigator2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="dlgOpen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>171, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAAAADoAgAAJgAAABAQEAAAAAAAKAEAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAIAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+IhwAAAAAAAAAAAAAAD/
        8AAA+HAAAAAAAAAAAAAP8AAIAACHAAAAAAAAAAAA/wAACAAACHAAAAAAAAAAD/APAAAACACHAAAAAAAA
        AA/wAPAAAIAA+AAAAAAAAAD/AAAAiHAAAA9wAAAAAAAA/wAAD/iHAAAPgAAAAAAAAP8P8A//iACID4AA
        AAAAAAD/AAAP//gAAA+AAAAAAAAA/wAAAP/wAAAP8AAAAAAAAP/wAPAAAPAA//AAAAAAAAD/8A8AAAAP
        AP/wAAAAAAAAD/8AAA8AAA//AAAAAAAAAA//8AAPAAD//wAAAAAAAAAA///wAAD///AAAAAAAAAAAA//
        //D///8AAAAAAAAAAAAA//8AD//wAAAAAAAAAAAAAAD////wCAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAA
        AAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAADwAAAAAAAAAAAA8AAAAAAA8AAAAAAAAAAAAAAAAAAAAPAAAA
        AAAAAAAADwAAAAAADwAAAAAAAAAAAA8AAAAAAA8AAAAAAAAAAAAP8AAAAAD/AAAAAAAAAAAAAP8AAAAP
        8AAAAAAAAAAAAAAP/wAP/wAAAAAAAAAAAAAAAA///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//Af///A
        B///gAP//wAB//4AAP/8AAB//AAAf/gAAD/4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAD/8AAB//AAAf/4A
        AP//AAH//4AB///AAf//8BH////x//8f8f//H/H//z/x//8f8f//H/H//w/h//+Dg///wAf//+AP///4
        P/8oAAAAEAAAACAAAAABAAQAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAICAgADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAP/3cA
        AAAAAP8AD3AAAAAP8PDw9wAAAA8ACAAPAAAADw8PDw8AAAAPAAAADwAAAADw8PDwAAAAAP8AD/AAAAAA
        APfwAAAAAAAAAADwAAAAAABwAPAAAAAADwAA8AAAAAAPgAjwAAAAAAD//wAAAAAAAAAAAAAA+D8AAPAf
        AADgDwAAwAcAAMAHAADABwAAwAcAAOAPAADgDwAA8A8AAPwPAADxjwAA8Y8AAPAPAAD4HwAA/D8AAA==
</value>
  </data>
</root>